spring.application.name=webdemo
server.port=80

#配置mysql数据源
spring.datasource.url=jdbc:mysql://localhost:3306/jpa_test?useSSL=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.username=root
spring.datasource.password=123456

#配置mybatis,使用xml的时候需要配置，不然找不到映射文件，还有注意命名是驼峰式的，还有可以注解和xml同事配合使用
mybatis.mapper-locations=classpath*:/mapper/**Mapper.xml
mybatis.configuration.map-underscore-to-camel-case=true
# mybatis show sql
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
#配置mybatis的pageHelper
pagehelper.auto-dialect= true
pagehelper.close-conn= false
pagehelper.reasonable= true

#配置jpa
spring.jpa.show-sql=true
#自动更新
spring.jpa.hibernate.ddl-auto= update
#让控制器输出的json格式更美观
spring.jackson.serialization.indent-output=true

#配置redis
spring.redis.host=122.224.168.146
spring.redis.port=9110
#数据库的索引，默认是0
spring.redis.database=4
spring.redis.timeout = 30000ms
spring.redis.jedis.pool.max-active=200
spring.redis.jedis.pool.max-idle=0
spring.redis.lettuce.pool.max-idle=5
spring.redis.jedis.pool.max-wait=20000ms

#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.232.128:9092
#=============== provider  =======================
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
